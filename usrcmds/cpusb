# This function write and reads to usb.
cpusb() {
  echo "### cpusb: This function is not safe! ###"
  echo "  Please come back later when it is fixed."
  return 4


  if [ $# -gt 3 -o $# -lt 2 ]; then
    echo "Usage: cpusb -[OPTIONS] sd[a-z][1-9] TARGET"
    return 1
  fi
  # Path of device to mount
  _devpath=/dev/$1
  # Make temporary folder for mounting
  _mount=/media/ekzyis/cpusb_TMP
  _target="$2"
  _dest="$_mount"
  __SUDO=1
  OPTIND=1
  while getopts ":rw-:" opt
  do
    case "$opt" in
      "-")  # check for long parameters
        case "$OPTARG" in
          read) _devpath=/dev/$2; _target="$_mount"; _dest="$3"; __SUDO=0;;
          write) _devpath=/dev/$2; _target="$3"; _dest="$_mount";;
          *) echo "cpusb: Ungültige Option -- $OPTARG"; return 2;;
        esac;;
      r) _devpath=/dev/$2; _target="$_mount"; _dest="$3"; __SUDO=0;;
      w) _devpath=/dev/$2; _target="$3"; _dest="$_mount";;
      *) echo "cpusb: Ungültige Option -- $OPTARG"; return 2;;
    esac
  done
  # echo "_devpath=$_devpath, _target=$_target, _dest=$_dest, _mount=$_mount"
  sudo mkdir "$_mount" 2> /dev/null
  # Mount device
  sudo mount "$_devpath" "$_mount" 2> /dev/null
  if [ $? -ne 0 ]; then
  	echo "Could not mount device."
  	return 3
  fi
  if [ ! -d "$_target" ]; then
  	echo "$_target does not exist."
  	return 4
  fi
  # Copy files
  echo "Copying $_target to $_dest ..."
  if [ $__SUDO -eq 1 ]; then
    sudo cp -r "$_target" "$_dest"
  else
    cp -rT "$_target" "$_dest/" # no sudo when reading - else created folder belongs to superuser
  fi
  # List written files
  cd "$_dest" && echo "Finished. Contents of $PWD:" && la && cd $OLDPWD 
  # Unmount device until no longer mounted ((u)mount failure)
  sudo umount "$_devpath"
  while [ ! $? -eq 32 ]; do
      sudo umount "$_devpath" 2> /dev/null
  done
  echo "Unmounted $_devpath ($_mount). You can unplug the device now."
  # Delete temporary folder
  sudo rm -r "$_mount" # IS THIS SAFE ?
}